name: php-docker
services:
  php_fpm:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - .:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ~/.composer:/root/.composer # Montar o volume do Composer
    networks:
      - myapp
    environment:
      MYSQL_HOST: ${DB_HOST}
    healthcheck:
      test: ["CMD", "php-fpm", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    build:
      context: docker/nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "${APP_PORT}:80"
    networks:
      - myapp
    depends_on:
      - php_fpm
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql:
    build:
        context: ./docker/mysql
        dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT}:3306"
    networks:
      - myapp
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: unless-stopped
    environment:
      PMA_HOST: ${DB_HOST}
      PMA_PORT: ${DB_PORT}
    ports:
      - "${PHPMYADMIN_PORT}:80"
    networks:
      - myapp
    depends_on:
      - mysql

  redis:
    image: redis:latest
    restart: unless-stopped
    volumes:
      - ./docker/redis/data:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - myapp
    depends_on:
      - php_fpm
      - mysql
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  myapp:
    driver: bridge
